{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather-app/webpack/runtime/create fake namespace object","webpack://weather-app/webpack/runtime/load script","webpack://weather-app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://weather-app/./node_modules/css-loader/dist/runtime/api.js","webpack://weather-app/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://weather-app/./src/icons/ lazy ^\\.\\/.*\\.png$ referencedExports: default namespace object","webpack://weather-app/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://weather-app/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://weather-app/./src/style.css","webpack://weather-app/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/compat get default export","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/ensure chunk","webpack://weather-app/webpack/runtime/get javascript chunk filename","webpack://weather-app/webpack/runtime/global","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/webpack/runtime/publicPath","webpack://weather-app/webpack/runtime/jsonp chunk loading","webpack://weather-app/webpack/runtime/nonce","webpack://weather-app/./src/style.css?53e3","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://weather-app/./node_modules/date-fns/locale/en-US.js","webpack://weather-app/./node_modules/date-fns/_lib/defaultOptions.js","webpack://weather-app/./node_modules/date-fns/constants.js","webpack://weather-app/./node_modules/date-fns/constructFrom.js","webpack://weather-app/./node_modules/date-fns/toDate.js","webpack://weather-app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://weather-app/./node_modules/date-fns/startOfDay.js","webpack://weather-app/./node_modules/date-fns/getDayOfYear.js","webpack://weather-app/./node_modules/date-fns/differenceInCalendarDays.js","webpack://weather-app/./node_modules/date-fns/_lib/normalizeDates.js","webpack://weather-app/./node_modules/date-fns/startOfYear.js","webpack://weather-app/./node_modules/date-fns/startOfWeek.js","webpack://weather-app/./node_modules/date-fns/startOfISOWeek.js","webpack://weather-app/./node_modules/date-fns/getISOWeekYear.js","webpack://weather-app/./node_modules/date-fns/getISOWeek.js","webpack://weather-app/./node_modules/date-fns/startOfISOWeekYear.js","webpack://weather-app/./node_modules/date-fns/getWeekYear.js","webpack://weather-app/./node_modules/date-fns/getWeek.js","webpack://weather-app/./node_modules/date-fns/startOfWeekYear.js","webpack://weather-app/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://weather-app/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://weather-app/./node_modules/date-fns/_lib/format/formatters.js","webpack://weather-app/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://weather-app/./node_modules/date-fns/_lib/protectedTokens.js","webpack://weather-app/./node_modules/date-fns/isValid.js","webpack://weather-app/./node_modules/date-fns/isDate.js","webpack://weather-app/./node_modules/date-fns/format.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/_lib/tzIntlTimeZoneName/index.js","webpack://weather-app/./node_modules/date-fns/getDefaultOptions.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/_lib/tzTokenizeDate/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/_lib/newDateUTC/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/_lib/tzParseTimezone/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/format/formatters/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/_lib/tzPattern/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/toDate/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/format/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/formatInTimeZone/index.js","webpack://weather-app/./node_modules/date-fns-tz/dist/esm/toZonedTime/index.js","webpack://weather-app/./src/country.js","webpack://weather-app/./src/dom.js","webpack://weather-app/./src/index.js","webpack://weather-app/./src/api.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"weather-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","var map = {\n\t\"./clear-day.png\": [\n\t\t122,\n\t\t122\n\t],\n\t\"./clear-night.png\": [\n\t\t358,\n\t\t358\n\t],\n\t\"./cloudy.png\": [\n\t\t366,\n\t\t366\n\t],\n\t\"./fog.png\": [\n\t\t848,\n\t\t848\n\t],\n\t\"./partly-cloudy-day.png\": [\n\t\t766,\n\t\t766\n\t],\n\t\"./partly-cloudy-night.png\": [\n\t\t890,\n\t\t890\n\t],\n\t\"./rain.png\": [\n\t\t572,\n\t\t572\n\t],\n\t\"./showers-day.png\": [\n\t\t380,\n\t\t380\n\t],\n\t\"./showers-night.png\": [\n\t\t40,\n\t\t40\n\t],\n\t\"./snow-showers-day.png\": [\n\t\t288,\n\t\t288\n\t],\n\t\"./snow-showers-night.png\": [\n\t\t196,\n\t\t196\n\t],\n\t\"./snow.png\": [\n\t\t199,\n\t\t199\n\t],\n\t\"./thunder-rain.png\": [\n\t\t367,\n\t\t367\n\t],\n\t\"./thunder-showers-day.png\": [\n\t\t641,\n\t\t641\n\t],\n\t\"./thunder-showers-night.png\": [\n\t\t77,\n\t\t77\n\t],\n\t\"./wind.png\": [\n\t\t976,\n\t\t976\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 373;\nmodule.exports = webpackAsyncContext;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./images/search.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./images/left-arrow.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"./images/right-arrow.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*::before,\n*::after,\n*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}   \n\nbody{\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background: #2a2438;\n}\n\nh1{\n    font-size: 4rem;\n    color: #dbd8e3;\n}\n\n.top-content{\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    width: 100%;\n}\n\n.search-content{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    gap: 10px;\n    color: rgb(0, 162, 255);\n}\n\n.search-container{\n    display: flex;\n    gap: 5px;\n    width: clamp(30rem, 45rem, 100vw);\n}\n\n.input-container{\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    gap: 5px;\n}\n\ninput[type=\"text\"]{\n    font-size: 1.5rem;\n    outline: none;\n    border: none;\n    background: #352f44; \n    color: #dbd8e3;\n    border-radius: 2rem;\n    padding: 1rem;\n    flex-grow: 1;\n}\n\ninput[type=\"text\"]::placeholder{\n    color: #5c5470;\n}\n\n\n.submit{\n    position: absolute;\n    right: 7px;\n    top: 50%; \n    transform: translateY(-50%);\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n    background-size: cover;\n    background-color: rgba(255, 255, 255, 0);\n    width: 47px;\n    height: 47px;\n    border: none;\n    border-radius: 0.5rem;\n    cursor: pointer;\n}\n\n.scale-text{\n    min-width: 1.5em;\n    font-size: 3.5rem;\n    cursor: pointer;\n    color: #5c5470;\n}\n\n.scale-text:hover{\n    color: #dbd8e3;\n}\n\n.weather-content{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    width: 100%;\n}\n\n.weather-headers{\n    justify-items: center;\n    color: #dbd8e3;\n}\n\n.headers:nth-child(1){\n    font-size: 2.5rem;\n    font-weight: 900;\n}\n\n.headers:nth-child(3){\n    font-size: 1.5rem;\n}\n\n.temp-container{\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    margin: 0.5rem 0 0 0;\n}\n\n.temp-img{\n    height: 90px;\n    width: 90px;\n}\n\n.temp-text{\n    font-size: 4rem;\n    font-weight: 900;\n}\n\n.card-container{\n    width: 100%;\n    max-width: 700px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 20px;\n    margin-bottom: 0.5rem;\n}\n\n.card{\n    font-size: 1.5rem;\n    min-height: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    background: #352f44; \n    border-radius: 1rem;\n    color: #dbd8e3;\n}\n\n.card-header{\n    color: #6e6a79; \n}\n\n.card-value{\n    font-weight: 900;\n}\n\n.carrousel-container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.left-button{\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n    background-size: cover;\n    background-color: rgba(255, 255, 255, 0);\n    border: none;\n    height: 40px;\n    width: 40px;\n    cursor: pointer;\n}\n\n.right-button{\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n    background-size: cover;\n    background-color: rgba(255, 255, 255, 0);\n    border: none;\n    height: 40px;\n    width: 40px;\n    cursor: pointer;\n}\n\n.frame{\n    overflow: hidden;\n    width: 1000px;\n}\n\n.days-container{\n    display: flex;\n    gap: 10px;\n    padding-bottom: 1rem;\n    transition: transform 0.3s ease;\n}\n\n.day{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n    min-width: 190px;\n    color: #dbd8e3;\n}\n\n.day-icon{\n    height: 50px;\n    width: 50px;\n    margin-bottom: 0.2rem;\n}\n\n.day-temp{\n    font-size: 1.5rem;\n    font-weight: 900;\n}\n\n.day-condition{\n    margin-top: 0.2rem;\n}\n\n.footer{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    font-size: 2rem;\n    color: #dbd8e3;\n    min-height: 75px;\n    background: #352f44; \n    width: 100%;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;IAGI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;IACR,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,WAAW;IACX,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,iCAAiC;AACrC;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,WAAW;IACX,QAAQ;AACZ;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,cAAc;IACd,mBAAmB;IACnB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;;AAGA;IACI,kBAAkB;IAClB,UAAU;IACV,QAAQ;IACR,2BAA2B;IAC3B,yDAA4C;IAC5C,sBAAsB;IACtB,wCAAwC;IACxC,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,2DAA2D;IAC3D,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,mBAAmB;IACnB,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,yDAAgD;IAChD,sBAAsB;IACtB,wCAAwC;IACxC,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,yDAAiD;IACjD,sBAAsB;IACtB,wCAAwC;IACxC,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;IACR,gBAAgB;IAChB,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,eAAe;IACf,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,WAAW;AACf\",\"sourcesContent\":[\"*::before,\\n*::after,\\n*{\\n    padding: 0;\\n    margin: 0;\\n    box-sizing: border-box;\\n}   \\n\\nbody{\\n    min-height: 100vh;\\n    display: flex;\\n    flex-direction: column;\\n    background: #2a2438;\\n}\\n\\nh1{\\n    font-size: 4rem;\\n    color: #dbd8e3;\\n}\\n\\n.top-content{\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 5px;\\n    width: 100%;\\n}\\n\\n.search-content{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    width: 100%;\\n    gap: 10px;\\n    color: rgb(0, 162, 255);\\n}\\n\\n.search-container{\\n    display: flex;\\n    gap: 5px;\\n    width: clamp(30rem, 45rem, 100vw);\\n}\\n\\n.input-container{\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    width: 100%;\\n    gap: 5px;\\n}\\n\\ninput[type=\\\"text\\\"]{\\n    font-size: 1.5rem;\\n    outline: none;\\n    border: none;\\n    background: #352f44; \\n    color: #dbd8e3;\\n    border-radius: 2rem;\\n    padding: 1rem;\\n    flex-grow: 1;\\n}\\n\\ninput[type=\\\"text\\\"]::placeholder{\\n    color: #5c5470;\\n}\\n\\n\\n.submit{\\n    position: absolute;\\n    right: 7px;\\n    top: 50%; \\n    transform: translateY(-50%);\\n    background-image: url(\\\"./images/search.svg\\\");\\n    background-size: cover;\\n    background-color: rgba(255, 255, 255, 0);\\n    width: 47px;\\n    height: 47px;\\n    border: none;\\n    border-radius: 0.5rem;\\n    cursor: pointer;\\n}\\n\\n.scale-text{\\n    min-width: 1.5em;\\n    font-size: 3.5rem;\\n    cursor: pointer;\\n    color: #5c5470;\\n}\\n\\n.scale-text:hover{\\n    color: #dbd8e3;\\n}\\n\\n.weather-content{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 20px;\\n    width: 100%;\\n}\\n\\n.weather-headers{\\n    justify-items: center;\\n    color: #dbd8e3;\\n}\\n\\n.headers:nth-child(1){\\n    font-size: 2.5rem;\\n    font-weight: 900;\\n}\\n\\n.headers:nth-child(3){\\n    font-size: 1.5rem;\\n}\\n\\n.temp-container{\\n    display: flex;\\n    align-items: center;\\n    gap: 15px;\\n    margin: 0.5rem 0 0 0;\\n}\\n\\n.temp-img{\\n    height: 90px;\\n    width: 90px;\\n}\\n\\n.temp-text{\\n    font-size: 4rem;\\n    font-weight: 900;\\n}\\n\\n.card-container{\\n    width: 100%;\\n    max-width: 700px;\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n    gap: 20px;\\n    margin-bottom: 0.5rem;\\n}\\n\\n.card{\\n    font-size: 1.5rem;\\n    min-height: 100px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 10px;\\n    background: #352f44; \\n    border-radius: 1rem;\\n    color: #dbd8e3;\\n}\\n\\n.card-header{\\n    color: #6e6a79; \\n}\\n\\n.card-value{\\n    font-weight: 900;\\n}\\n\\n.carrousel-container{\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.left-button{\\n    background-image: url(\\\"./images/left-arrow.svg\\\");\\n    background-size: cover;\\n    background-color: rgba(255, 255, 255, 0);\\n    border: none;\\n    height: 40px;\\n    width: 40px;\\n    cursor: pointer;\\n}\\n\\n.right-button{\\n    background-image: url(\\\"./images/right-arrow.svg\\\");\\n    background-size: cover;\\n    background-color: rgba(255, 255, 255, 0);\\n    border: none;\\n    height: 40px;\\n    width: 40px;\\n    cursor: pointer;\\n}\\n\\n.frame{\\n    overflow: hidden;\\n    width: 1000px;\\n}\\n\\n.days-container{\\n    display: flex;\\n    gap: 10px;\\n    padding-bottom: 1rem;\\n    transition: transform 0.3s ease;\\n}\\n\\n.day{\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 5px;\\n    min-width: 190px;\\n    color: #dbd8e3;\\n}\\n\\n.day-icon{\\n    height: 50px;\\n    width: 50px;\\n    margin-bottom: 0.2rem;\\n}\\n\\n.day-temp{\\n    font-size: 1.5rem;\\n    font-weight: 900;\\n}\\n\\n.day-condition{\\n    margin-top: 0.2rem;\\n}\\n\\n.footer{\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 10px;\\n    font-size: 2rem;\\n    color: #dbd8e3;\\n    min-height: 75px;\\n    background: #352f44; \\n    width: 100%;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = (document && document.baseURI) || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweather_app\"] = self[\"webpackChunkweather_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { getDefaultOptions } from 'date-fns';\n/**\n * Returns the formatted time zone name of the provided `timeZone` or the current\n * system time zone if omitted, accounting for DST according to the UTC value of\n * the date.\n */\nexport function tzIntlTimeZoneName(length, date, options) {\n    const defaultOptions = getDefaultOptions();\n    const dtf = getDTF(length, options.timeZone, options.locale ?? defaultOptions.locale);\n    return 'formatToParts' in dtf ? partsTimeZone(dtf, date) : hackyTimeZone(dtf, date);\n}\nfunction partsTimeZone(dtf, date) {\n    const formatted = dtf.formatToParts(date);\n    for (let i = formatted.length - 1; i >= 0; --i) {\n        if (formatted[i].type === 'timeZoneName') {\n            return formatted[i].value;\n        }\n    }\n    return undefined;\n}\nfunction hackyTimeZone(dtf, date) {\n    const formatted = dtf.format(date).replace(/\\u200E/g, '');\n    const tzNameMatch = / [\\w-+ ]+$/.exec(formatted);\n    return tzNameMatch ? tzNameMatch[0].substr(1) : '';\n}\n// If a locale has been provided `en-US` is used as a fallback in case it is an\n// invalid locale, otherwise the locale is left undefined to use the system locale.\nfunction getDTF(length, timeZone, locale) {\n    return new Intl.DateTimeFormat(locale ? [locale.code, 'en-US'] : undefined, {\n        timeZone: timeZone,\n        timeZoneName: length,\n    });\n}\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","/**\n * Returns the [year, month, day, hour, minute, seconds] tokens of the provided\n * `date` as it will be rendered in the `timeZone`.\n */\nexport function tzTokenizeDate(date, timeZone) {\n    const dtf = getDateTimeFormat(timeZone);\n    return 'formatToParts' in dtf ? partsOffset(dtf, date) : hackyOffset(dtf, date);\n}\nconst typeToPos = {\n    year: 0,\n    month: 1,\n    day: 2,\n    hour: 3,\n    minute: 4,\n    second: 5,\n};\nfunction partsOffset(dtf, date) {\n    try {\n        const formatted = dtf.formatToParts(date);\n        const filled = [];\n        for (let i = 0; i < formatted.length; i++) {\n            const pos = typeToPos[formatted[i].type];\n            if (pos !== undefined) {\n                filled[pos] = parseInt(formatted[i].value, 10);\n            }\n        }\n        return filled;\n    }\n    catch (error) {\n        if (error instanceof RangeError) {\n            return [NaN];\n        }\n        throw error;\n    }\n}\nfunction hackyOffset(dtf, date) {\n    const formatted = dtf.format(date);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted);\n    // const [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed\n    // return [fYear, fMonth, fDay, fHour, fMinute, fSecond]\n    return [\n        parseInt(parsed[3], 10),\n        parseInt(parsed[1], 10),\n        parseInt(parsed[2], 10),\n        parseInt(parsed[4], 10),\n        parseInt(parsed[5], 10),\n        parseInt(parsed[6], 10),\n    ];\n}\n// Get a cached Intl.DateTimeFormat instance for the IANA `timeZone`. This can be used\n// to get deterministic local date/time output according to the `en-US` locale which\n// can be used to extract local time parts as necessary.\nconst dtfCache = {};\n// New browsers use `hourCycle`, IE and Chrome <73 does not support it and uses `hour12`\nconst testDateFormatted = new Intl.DateTimeFormat('en-US', {\n    hourCycle: 'h23',\n    timeZone: 'America/New_York',\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n}).format(new Date('2014-06-25T04:00:00.123Z'));\nconst hourCycleSupported = testDateFormatted === '06/25/2014, 00:00:00' ||\n    testDateFormatted === '‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00';\nfunction getDateTimeFormat(timeZone) {\n    if (!dtfCache[timeZone]) {\n        dtfCache[timeZone] = hourCycleSupported\n            ? new Intl.DateTimeFormat('en-US', {\n                hourCycle: 'h23',\n                timeZone: timeZone,\n                year: 'numeric',\n                month: 'numeric',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            })\n            : new Intl.DateTimeFormat('en-US', {\n                hour12: false,\n                timeZone: timeZone,\n                year: 'numeric',\n                month: 'numeric',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n    }\n    return dtfCache[timeZone];\n}\n","/**\n * Use instead of `new Date(Date.UTC(...))` to support years below 100 which doesn't work\n * otherwise due to the nature of the\n * [`Date` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years.\n *\n * For `Date.UTC(...)`, use `newDateUTC(...).getTime()`.\n */\nexport function newDateUTC(fullYear, month, day, hour, minute, second, millisecond) {\n    const utcDate = new Date(0);\n    utcDate.setUTCFullYear(fullYear, month, day);\n    utcDate.setUTCHours(hour, minute, second, millisecond);\n    return utcDate;\n}\n","import { tzTokenizeDate } from '../tzTokenizeDate/index.js';\nimport { newDateUTC } from '../newDateUTC/index.js';\nconst MILLISECONDS_IN_HOUR = 3600000;\nconst MILLISECONDS_IN_MINUTE = 60000;\nconst patterns = {\n    timezone: /([Z+-].*)$/,\n    timezoneZ: /^(Z)$/,\n    timezoneHH: /^([+-]\\d{2})$/,\n    timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/,\n};\n// Parse constious time zone offset formats to an offset in milliseconds\nexport function tzParseTimezone(timezoneString, date, isUtcDate) {\n    // Empty string\n    if (!timezoneString) {\n        return 0;\n    }\n    // Z\n    let token = patterns.timezoneZ.exec(timezoneString);\n    if (token) {\n        return 0;\n    }\n    let hours;\n    let absoluteOffset;\n    // ±hh\n    token = patterns.timezoneHH.exec(timezoneString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        if (!validateTimezone(hours)) {\n            return NaN;\n        }\n        return -(hours * MILLISECONDS_IN_HOUR);\n    }\n    // ±hh:mm or ±hhmm\n    token = patterns.timezoneHHMM.exec(timezoneString);\n    if (token) {\n        hours = parseInt(token[2], 10);\n        const minutes = parseInt(token[3], 10);\n        if (!validateTimezone(hours, minutes)) {\n            return NaN;\n        }\n        absoluteOffset = Math.abs(hours) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n        return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n    }\n    // IANA time zone\n    if (isValidTimezoneIANAString(timezoneString)) {\n        date = new Date(date || Date.now());\n        const utcDate = isUtcDate ? date : toUtcDate(date);\n        const offset = calcOffset(utcDate, timezoneString);\n        const fixedOffset = isUtcDate ? offset : fixOffset(date, offset, timezoneString);\n        return -fixedOffset;\n    }\n    return NaN;\n}\nfunction toUtcDate(date) {\n    return newDateUTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n}\nfunction calcOffset(date, timezoneString) {\n    const tokens = tzTokenizeDate(date, timezoneString);\n    // ms dropped because it's not provided by tzTokenizeDate\n    const asUTC = newDateUTC(tokens[0], tokens[1] - 1, tokens[2], tokens[3] % 24, tokens[4], tokens[5], 0).getTime();\n    let asTS = date.getTime();\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return asUTC - asTS;\n}\nfunction fixOffset(date, offset, timezoneString) {\n    const localTS = date.getTime();\n    // Our UTC time is just a guess because our offset is just a guess\n    let utcGuess = localTS - offset;\n    // Test whether the zone matches the offset for this ts\n    const o2 = calcOffset(new Date(utcGuess), timezoneString);\n    // If so, offset didn't change, and we're done\n    if (offset === o2) {\n        return offset;\n    }\n    // If not, change the ts by the difference in the offset\n    utcGuess -= o2 - offset;\n    // If that gives us the local time we want, we're done\n    const o3 = calcOffset(new Date(utcGuess), timezoneString);\n    if (o2 === o3) {\n        return o2;\n    }\n    // If it's different, we're in a hole time. The offset has changed, but we don't adjust the time\n    return Math.max(o2, o3);\n}\nfunction validateTimezone(hours, minutes) {\n    return -23 <= hours && hours <= 23 && (minutes == null || (0 <= minutes && minutes <= 59));\n}\nconst validIANATimezoneCache = {};\nfunction isValidTimezoneIANAString(timeZoneString) {\n    if (validIANATimezoneCache[timeZoneString])\n        return true;\n    try {\n        new Intl.DateTimeFormat(undefined, { timeZone: timeZoneString });\n        validIANATimezoneCache[timeZoneString] = true;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n","import { tzIntlTimeZoneName } from '../../_lib/tzIntlTimeZoneName/index.js';\nimport { tzParseTimezone } from '../../_lib/tzParseTimezone/index.js';\nconst MILLISECONDS_IN_MINUTE = 60 * 1000;\nexport const formatters = {\n    // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n    X: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        if (timezoneOffset === 0) {\n            return 'Z';\n        }\n        switch (token) {\n            // Hours and optional minutes\n            case 'X':\n                return formatTimezoneWithOptionalMinutes(timezoneOffset);\n            // Hours, minutes and optional seconds without `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `XX`\n            case 'XXXX':\n            case 'XX': // Hours and minutes without `:` delimeter\n                return formatTimezone(timezoneOffset);\n            // Hours, minutes and optional seconds with `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `XXX`\n            case 'XXXXX':\n            case 'XXX': // Hours and minutes with `:` delimeter\n            default:\n                return formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n    x: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        switch (token) {\n            // Hours and optional minutes\n            case 'x':\n                return formatTimezoneWithOptionalMinutes(timezoneOffset);\n            // Hours, minutes and optional seconds without `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `xx`\n            case 'xxxx':\n            case 'xx': // Hours and minutes without `:` delimeter\n                return formatTimezone(timezoneOffset);\n            // Hours, minutes and optional seconds with `:` delimeter\n            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n            // so this token always has the same output as `xxx`\n            case 'xxxxx':\n            case 'xxx': // Hours and minutes with `:` delimeter\n            default:\n                return formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (GMT)\n    O: function (date, token, options) {\n        const timezoneOffset = getTimeZoneOffset(options.timeZone, date);\n        switch (token) {\n            // Short\n            case 'O':\n            case 'OO':\n            case 'OOO':\n                return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n            // Long\n            case 'OOOO':\n            default:\n                return 'GMT' + formatTimezone(timezoneOffset, ':');\n        }\n    },\n    // Timezone (specific non-location)\n    z: function (date, token, options) {\n        switch (token) {\n            // Short\n            case 'z':\n            case 'zz':\n            case 'zzz':\n                return tzIntlTimeZoneName('short', date, options);\n            // Long\n            case 'zzzz':\n            default:\n                return tzIntlTimeZoneName('long', date, options);\n        }\n    },\n};\nfunction getTimeZoneOffset(timeZone, originalDate) {\n    const timeZoneOffset = timeZone\n        ? tzParseTimezone(timeZone, originalDate, true) / MILLISECONDS_IN_MINUTE\n        : originalDate?.getTimezoneOffset() ?? 0;\n    if (Number.isNaN(timeZoneOffset)) {\n        throw new RangeError('Invalid time zone specified: ' + timeZone);\n    }\n    return timeZoneOffset;\n}\nfunction addLeadingZeros(number, targetLength) {\n    const sign = number < 0 ? '-' : '';\n    let output = Math.abs(number).toString();\n    while (output.length < targetLength) {\n        output = '0' + output;\n    }\n    return sign + output;\n}\nfunction formatTimezone(offset, delimiter = '') {\n    const sign = offset > 0 ? '-' : '+';\n    const absOffset = Math.abs(offset);\n    const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n    const minutes = addLeadingZeros(Math.floor(absOffset % 60), 2);\n    return sign + hours + delimiter + minutes;\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n    if (offset % 60 === 0) {\n        const sign = offset > 0 ? '-' : '+';\n        return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n    }\n    return formatTimezone(offset, delimiter);\n}\nfunction formatTimezoneShort(offset, delimiter = '') {\n    const sign = offset > 0 ? '-' : '+';\n    const absOffset = Math.abs(offset);\n    const hours = Math.floor(absOffset / 60);\n    const minutes = absOffset % 60;\n    if (minutes === 0) {\n        return sign + String(hours);\n    }\n    return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n    const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    utcDate.setUTCFullYear(date.getFullYear());\n    return +date - +utcDate;\n}\n","/** Regex to identify the presence of a time zone specifier in a date string */\nexport const tzPattern = /(Z|[+-]\\d{2}(?::?\\d{2})?| UTC| [a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?)$/;\n","import { getTimezoneOffsetInMilliseconds } from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { tzPattern } from '../_lib/tzPattern/index.js';\nconst MILLISECONDS_IN_HOUR = 3600000;\nconst MILLISECONDS_IN_MINUTE = 60000;\nconst DEFAULT_ADDITIONAL_DIGITS = 2;\nconst patterns = {\n    dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,\n    datePattern: /^([0-9W+-]+)(.*)/,\n    plainTime: /:/,\n    // year tokens\n    YY: /^(\\d{2})$/,\n    YYY: [\n        /^([+-]\\d{2})$/, // 0 additional digits\n        /^([+-]\\d{3})$/, // 1 additional digit\n        /^([+-]\\d{4})$/, // 2 additional digits\n    ],\n    YYYY: /^(\\d{4})/,\n    YYYYY: [\n        /^([+-]\\d{4})/, // 0 additional digits\n        /^([+-]\\d{5})/, // 1 additional digit\n        /^([+-]\\d{6})/, // 2 additional digits\n    ],\n    // date tokens\n    MM: /^-(\\d{2})$/,\n    DDD: /^-?(\\d{3})$/,\n    MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n    Www: /^-?W(\\d{2})$/,\n    WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n    HH: /^(\\d{2}([.,]\\d*)?)$/,\n    HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n    HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n    // time zone tokens (to identify the presence of a tz)\n    timeZone: tzPattern,\n};\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param argument the value to convert\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @param {string} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n *\n * @returns the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function toDate(argument, options = {}) {\n    if (arguments.length < 1) {\n        throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n    }\n    if (argument === null) {\n        return new Date(NaN);\n    }\n    const additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : Number(options.additionalDigits);\n    if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n        throw new RangeError('additionalDigits must be 0, 1 or 2');\n    }\n    // Clone the date\n    if (argument instanceof Date ||\n        (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')) {\n        // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n        return new Date(argument.getTime());\n    }\n    else if (typeof argument === 'number' ||\n        Object.prototype.toString.call(argument) === '[object Number]') {\n        return new Date(argument);\n    }\n    else if (!(Object.prototype.toString.call(argument) === '[object String]')) {\n        return new Date(NaN);\n    }\n    const dateStrings = splitDateString(argument);\n    const { year, restDateString } = parseYear(dateStrings.date, additionalDigits);\n    const date = parseDate(restDateString, year);\n    if (date === null || isNaN(date.getTime())) {\n        return new Date(NaN);\n    }\n    if (date) {\n        const timestamp = date.getTime();\n        let time = 0;\n        let offset;\n        if (dateStrings.time) {\n            time = parseTime(dateStrings.time);\n            if (time === null || isNaN(time)) {\n                return new Date(NaN);\n            }\n        }\n        if (dateStrings.timeZone || options.timeZone) {\n            offset = tzParseTimezone(dateStrings.timeZone || options.timeZone, new Date(timestamp + time));\n            if (isNaN(offset)) {\n                return new Date(NaN);\n            }\n        }\n        else {\n            // get offset accurate to hour in time zones that change offset\n            offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time));\n            offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset));\n        }\n        return new Date(timestamp + time + offset);\n    }\n    else {\n        return new Date(NaN);\n    }\n}\nfunction splitDateString(dateString) {\n    const dateStrings = {};\n    let parts = patterns.dateTimePattern.exec(dateString);\n    let timeString;\n    if (!parts) {\n        parts = patterns.datePattern.exec(dateString);\n        if (parts) {\n            dateStrings.date = parts[1];\n            timeString = parts[2];\n        }\n        else {\n            dateStrings.date = null;\n            timeString = dateString;\n        }\n    }\n    else {\n        dateStrings.date = parts[1];\n        timeString = parts[3];\n    }\n    if (timeString) {\n        const token = patterns.timeZone.exec(timeString);\n        if (token) {\n            dateStrings.time = timeString.replace(token[1], '');\n            dateStrings.timeZone = token[1].trim();\n        }\n        else {\n            dateStrings.time = timeString;\n        }\n    }\n    return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n    if (dateString) {\n        const patternYYY = patterns.YYY[additionalDigits];\n        const patternYYYYY = patterns.YYYYY[additionalDigits];\n        // YYYY or ±YYYYY\n        let token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString);\n        if (token) {\n            const yearString = token[1];\n            return {\n                year: parseInt(yearString, 10),\n                restDateString: dateString.slice(yearString.length),\n            };\n        }\n        // YY or ±YYY\n        token = patterns.YY.exec(dateString) || patternYYY.exec(dateString);\n        if (token) {\n            const centuryString = token[1];\n            return {\n                year: parseInt(centuryString, 10) * 100,\n                restDateString: dateString.slice(centuryString.length),\n            };\n        }\n    }\n    // Invalid ISO-formatted year\n    return {\n        year: null,\n    };\n}\nfunction parseDate(dateString, year) {\n    // Invalid ISO-formatted year\n    if (year === null) {\n        return null;\n    }\n    let date;\n    let month;\n    let week;\n    // YYYY\n    if (!dateString || !dateString.length) {\n        date = new Date(0);\n        date.setUTCFullYear(year);\n        return date;\n    }\n    // YYYY-MM\n    let token = patterns.MM.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        month = parseInt(token[1], 10) - 1;\n        if (!validateDate(year, month)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, month);\n        return date;\n    }\n    // YYYY-DDD or YYYYDDD\n    token = patterns.DDD.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        const dayOfYear = parseInt(token[1], 10);\n        if (!validateDayOfYearDate(year, dayOfYear)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, 0, dayOfYear);\n        return date;\n    }\n    // yyyy-MM-dd or YYYYMMDD\n    token = patterns.MMDD.exec(dateString);\n    if (token) {\n        date = new Date(0);\n        month = parseInt(token[1], 10) - 1;\n        const day = parseInt(token[2], 10);\n        if (!validateDate(year, month, day)) {\n            return new Date(NaN);\n        }\n        date.setUTCFullYear(year, month, day);\n        return date;\n    }\n    // YYYY-Www or YYYYWww\n    token = patterns.Www.exec(dateString);\n    if (token) {\n        week = parseInt(token[1], 10) - 1;\n        if (!validateWeekDate(week)) {\n            return new Date(NaN);\n        }\n        return dayOfISOWeekYear(year, week);\n    }\n    // YYYY-Www-D or YYYYWwwD\n    token = patterns.WwwD.exec(dateString);\n    if (token) {\n        week = parseInt(token[1], 10) - 1;\n        const dayOfWeek = parseInt(token[2], 10) - 1;\n        if (!validateWeekDate(week, dayOfWeek)) {\n            return new Date(NaN);\n        }\n        return dayOfISOWeekYear(year, week, dayOfWeek);\n    }\n    // Invalid ISO-formatted date\n    return null;\n}\nfunction parseTime(timeString) {\n    let hours;\n    let minutes;\n    // hh\n    let token = patterns.HH.exec(timeString);\n    if (token) {\n        hours = parseFloat(token[1].replace(',', '.'));\n        if (!validateTime(hours)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR;\n    }\n    // hh:mm or hhmm\n    token = patterns.HHMM.exec(timeString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        minutes = parseFloat(token[2].replace(',', '.'));\n        if (!validateTime(hours, minutes)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n    }\n    // hh:mm:ss or hhmmss\n    token = patterns.HHMMSS.exec(timeString);\n    if (token) {\n        hours = parseInt(token[1], 10);\n        minutes = parseInt(token[2], 10);\n        const seconds = parseFloat(token[3].replace(',', '.'));\n        if (!validateTime(hours, minutes, seconds)) {\n            return NaN;\n        }\n        return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n    }\n    // Invalid ISO-formatted time\n    return null;\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n    week = week || 0;\n    day = day || 0;\n    const date = new Date(0);\n    date.setUTCFullYear(isoWeekYear, 0, 4);\n    const fourthOfJanuaryDay = date.getUTCDay() || 7;\n    const diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n    date.setUTCDate(date.getUTCDate() + diff);\n    return date;\n}\n// Validation functions\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\nfunction validateDate(year, month, date) {\n    if (month < 0 || month > 11) {\n        return false;\n    }\n    if (date != null) {\n        if (date < 1) {\n            return false;\n        }\n        const isLeapYear = isLeapYearIndex(year);\n        if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n            return false;\n        }\n        if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n    if (dayOfYear < 1) {\n        return false;\n    }\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear && dayOfYear > 366) {\n        return false;\n    }\n    if (!isLeapYear && dayOfYear > 365) {\n        return false;\n    }\n    return true;\n}\nfunction validateWeekDate(week, day) {\n    if (week < 0 || week > 52) {\n        return false;\n    }\n    if (day != null && (day < 0 || day > 6)) {\n        return false;\n    }\n    return true;\n}\nfunction validateTime(hours, minutes, seconds) {\n    if (hours < 0 || hours >= 25) {\n        return false;\n    }\n    if (minutes != null && (minutes < 0 || minutes >= 60)) {\n        return false;\n    }\n    if (seconds != null && (seconds < 0 || seconds >= 60)) {\n        return false;\n    }\n    return true;\n}\n","import { format as dateFnsFormat } from 'date-fns/format';\nimport { formatters } from './formatters/index.js';\nimport { toDate } from '../toDate/index.js';\nconst tzFormattingTokensRegExp = /([xXOz]+)|''|'(''|[^'])+('|$)/g;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may consty by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | PDT, EST, CEST                    | 6     |\n * |                                 | zzzz    | Pacific Daylight Time             | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are created using the Intl browser API. The output is determined by the\n *    preferred standard of the current locale (en-US by default) which may not always give the expected result.\n *    For this reason it is recommended to supply a `locale` in the format options when formatting a time zone name.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole\n *   library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard\n *   #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table). See [this\n *   post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param date the original date\n * @param formatStr the string of tokens\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @param {Date|Number} [options.originalDate] - can be used to pass the original unmodified date to `format` to\n *   improve correctness of the replaced timezone token close to the DST threshold.\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see:\n *   https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options = {}) {\n    formatStr = String(formatStr);\n    const matches = formatStr.match(tzFormattingTokensRegExp);\n    if (matches) {\n        const d = toDate(options.originalDate || date, options);\n        // Work through each match and replace the tz token in the format string with the quoted\n        // formatted time zone so the remaining tokens can be filled in by date-fns#format.\n        formatStr = matches.reduce(function (result, token) {\n            if (token[0] === \"'\") {\n                return result; // This is a quoted portion, matched only to ensure we don't match inside it\n            }\n            const pos = result.indexOf(token);\n            const precededByQuotedSection = result[pos - 1] === \"'\";\n            const replaced = result.replace(token, \"'\" + formatters[token[0]](d, token, options) + \"'\");\n            // If the replacement results in two adjoining quoted strings, the back to back quotes\n            // are removed, so it doesn't look like an escaped quote.\n            return precededByQuotedSection\n                ? replaced.substring(0, pos - 1) + replaced.substring(pos + 1)\n                : replaced;\n        }, formatStr);\n    }\n    return dateFnsFormat(date, formatStr, options);\n}\n","import { format } from '../format/index.js';\nimport { toZonedTime } from '../toZonedTime/index.js';\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param date the date representing the local time / real UTC time\n * @param timeZone the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param formatStr the string of tokens\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n */\nexport function formatInTimeZone(date, timeZone, formatStr, options) {\n    options = {\n        ...options,\n        timeZone,\n        originalDate: date,\n    };\n    return format(toZonedTime(date, timeZone, { timeZone: options.timeZone }), formatStr, options);\n}\n","import { tzParseTimezone } from '../_lib/tzParseTimezone/index.js';\nimport { toDate } from '../toDate/index.js';\n/**\n * @name toZonedTime\n * @category Time Zone Helpers\n * @summary Get a date/time representing local time in a given time zone from the UTC date\n *\n * @description\n * Returns a date instance with values representing the local time in the time zone\n * specified of the UTC time from the date provided. In other words, when the new date\n * is formatted it will show the equivalent hours in the target time zone regardless\n * of the current system time zone.\n *\n * @param date the date with the relevant UTC time\n * @param timeZone the time zone to get local time for, can be an offset or IANA time zone\n * @param options the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n *\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am UTC is 6am in New York (-04:00)\n * const result = toZonedTime('2014-06-25T10:00:00.000Z', 'America/New_York')\n * //=> Jun 25 2014 06:00:00\n */\nexport function toZonedTime(date, timeZone, options) {\n    date = toDate(date, options);\n    const offsetMilliseconds = tzParseTimezone(timeZone, date, true);\n    const d = new Date(date.getTime() - offsetMilliseconds);\n    const resultDate = new Date(0);\n    resultDate.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\n    resultDate.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());\n    return resultDate;\n}\n","export class Country {\n    constructor(name, currentdate, condition, tempF, icon, feeltempF, wind, precipitation, precipitationprob, days, scale, timezone){\n        if (!new.target) {\n            throw Error(\"You must use the 'new' operator to call the constructor\");\n        }\n        this.name = name;\n        this.currentdate = currentdate;\n        this.condition = condition;\n        this.tempF = tempF;\n        this.icon = icon;\n        this.feeltempF = feeltempF;\n        this.wind = wind;\n        this.precipitation = precipitation;\n        this.precipitationprob = precipitationprob;\n        this.days = days;\n        this.scale = scale;\n        this.timezone = timezone;\n    }\n\n    get temp(){\n        return this.scale ? ((5/9)*(this.tempF-32)).toFixed(1) + '°C' : this.tempF + '°F';\n    }\n\n    get feeltemp(){\n        return this.scale ? ((5/9)*(this.feeltempF-32)).toFixed(1) + '°C' : this.feeltempF + '°F';\n    }\n\n    get daytemp(){\n        const tempsConvert = this.days.map(d => {\n            return this.scale ? ((5/9)*(d.temp-32)).toFixed(1) + '°' : d.temp + '°';\n        });\n        return tempsConvert;\n    }\n}\n\nCountry.prototype.changeScale = function() {\n    this.scale = !this.scale;\n};","export async function displayCountry(obj, container, loadImages, formatDates){\n    const weatherHeaders = document.createElement('div');\n    weatherHeaders.className = 'weather-headers';\n    container.appendChild(weatherHeaders);\n    const cardsDiv = document.createElement('div');\n    cardsDiv.className = 'card-container';\n    container.appendChild(cardsDiv);\n    const carrousel = document.createElement('div');\n    carrousel.className = 'carrousel-container';\n    container.appendChild(carrousel);\n    const leftBtn =  document.createElement('button');\n    leftBtn.className = 'left-button';\n    carrousel.appendChild(leftBtn);\n    const frame = document.createElement('div');\n    frame.className = 'frame';\n    carrousel.appendChild(frame);\n    const rightBtn =  document.createElement('button');\n    rightBtn.className = 'right-button';\n    carrousel.appendChild(rightBtn);\n    const daysDiv = document.createElement('div');\n    daysDiv.className = 'days-container';\n    frame.appendChild(daysDiv);\n    const daysArray = obj.days.slice(1, obj.days.length + 1);\n    const headers = {\n        feeltempF: 'Feels Like', \n        wind: 'Wind Speed', \n        precipitation: 'Precipitation', \n        precipitationprob: 'Precipitation Probability'\n    }\n    \n    for (const key in obj){\n        if (!(Object.prototype.hasOwnProperty.call(obj, key))) {\n            continue;\n        }\n\n        if(key === 'name' || key === 'condition' || key === 'currentdate' ){\n            const div = document.createElement('div');\n            div.classList = 'headers';\n            div.textContent = obj[key];\n            weatherHeaders.appendChild(div);\n        }else if(key === 'tempF'){\n            const tempDiv =  document.createElement('div');\n            tempDiv.classList = 'temp-container';\n            weatherHeaders.appendChild(tempDiv);\n            \n            const tempImg = document.createElement('img');\n            tempImg.classList = 'temp-img';\n            const imgSrc = await loadImages(obj.icon);\n            tempImg.src = imgSrc;\n            tempDiv.appendChild(tempImg);\n            \n            const tempText = document.createElement('div');\n            tempText.classList = 'temp-text';\n            tempText.textContent = obj.temp;\n            tempDiv.appendChild(tempText);\n            \n        }else if(key === 'icon' || key === 'scale' || key === 'timezone'){\n            continue;\n        }else if(key === 'days'){\n            daysArray.forEach( async (element, index) => {\n                if(index < daysArray.length){\n                    const dateZoned = formatDates(obj, index + 1);\n\n                    const day = document.createElement('div');\n                    day.classList = 'day';\n                    daysDiv.appendChild(day);\n\n                    const dayDate = document.createElement('div');\n                    dayDate.classList = 'day-date';\n                    dayDate.textContent = dateZoned;\n                    day.appendChild(dayDate);\n\n                    const dayIcon = document.createElement('img');\n                    dayIcon.classList = 'day-icon';\n                    const daySrc = await loadImages(element.icon);\n                    dayIcon.src = daySrc;\n                    day.appendChild(dayIcon);\n\n                    const dayTemp = document.createElement('div');\n                    dayTemp.classList = 'day-temp';\n                    dayTemp.textContent = obj.daytemp[index + 1];\n                    day.appendChild(dayTemp);\n\n                    const dayCondition = document.createElement('div');\n                    dayCondition.classList = 'day-condition';\n                    dayCondition.textContent = element.conditions;\n                    day.appendChild(dayCondition);\n                }\n            });\n            \n        }else{\n            const card = document.createElement('div');\n            card.classList = 'card';\n            cardsDiv.appendChild(card);\n\n            const header = document.createElement('div');\n            header.classList = 'card-header';\n            header.textContent = headers[key];\n            card.appendChild(header);\n\n            const value =  document.createElement('div');\n            value.classList = 'card-value';\n            key === 'feeltempF' ? value.textContent = obj.feeltemp : value.textContent = obj[key];\n            card.appendChild(value);\n        }\n    }\n\n    return {rightBtn, leftBtn, daysDiv, daysArray}\n}","import './style.css';\nimport { formatInTimeZone } from \"../node_modules/date-fns-tz\";\nimport { Country } from './country.js';\nimport { getData } from './api.js';\nimport { displayCountry } from './dom.js';\n\n(function (){\n    const searchBtn = document.querySelector('button');\n    const input =  document.getElementById('search-bar');\n    const mainDiv = document.querySelector('.top-content');\n    const weatherDiv = document.createElement('div');\n    weatherDiv.className = 'weather-content';\n    mainDiv.appendChild(weatherDiv);\n    const scale =  document.querySelector('.scale-text');\n\n    let flag = false;\n    let index = 0;\n    let currentCountry = null;\n\n    function addCountry(){\n\n        if(input.value === \"\"){\n            alert(\"Please enter a location\");\n            return;\n        }\n        return getData(input.value)\n                .then(result => {\n                    if (!result) return null;\n\n                    if(result === undefined){\n                        throw new Error(\"Country not found\");\n                    }\n                    const name = result.address;\n                    const nameFormatted = name.charAt(0).toUpperCase() + name.slice(1);\n                    const dateZoned = formatDates(result, 0);\n\n                    let precipitation = result.currentConditions.precip;\n                    if(precipitation === null){\n                        precipitation = 0;\n                    }\n                    currentCountry = new Country(\n                        nameFormatted, \n                        dateZoned, \n                        result.currentConditions.conditions, \n                        result.currentConditions.temp, \n                        result.currentConditions.icon, \n                        result.currentConditions.feelslike + '', \n                        result.currentConditions.windspeed + ' mph', \n                        precipitation + ' mm', \n                        result.currentConditions.precipprob + '%', \n                        result.days, flag, \n                        result.timezone\n                    );\n                    console.log(currentCountry);\n                    return currentCountry;\n                })\n                .catch(error => alert(error));\n    }\n\n    searchBtn.addEventListener('click', async () => {\n        weatherDiv.textContent = '';\n        currentCountry =  await addCountry();\n        if (!currentCountry) return;\n        const {rightBtn, leftBtn, daysDiv, daysArray} = await displayCountry(currentCountry, weatherDiv, loadImages, formatDates);\n        rightBtn.addEventListener('click', () => goToSlide(index + 1, daysArray, daysDiv));\n        leftBtn.addEventListener('click', () => goToSlide(index - 1, daysArray, daysDiv));\n    });\n\n    async function loadImages(icon){\n        try{\n            const module = await import(`./icons/${icon}.png`);\n            return module.default;\n        }catch(e){\n            alert(e);\n        }\n    }\n\n    scale.addEventListener('click', async () => {\n        if(currentCountry === null){\n            flag ? flag = false : flag = true;\n            flag ? scale.textContent = '°C' : scale.textContent = '°F';\n        }else{\n            flag ? flag = false : flag = true;\n            flag ? scale.textContent = '°C' : scale.textContent = '°F';\n            currentCountry.changeScale();\n            weatherDiv.textContent = '';\n            await displayCountry(currentCountry, weatherDiv, loadImages, formatDates);   \n        }\n    });\n\n    function formatDates(country, dates){\n        const date = new Date(country.days[dates].datetimeEpoch * 1000);\n        const timezone = country.timezone;\n        if(dates > 0) {\n            return formatInTimeZone(date, timezone, \"EEEE, MMMM d\");\n        } else{\n            return formatInTimeZone(date, timezone, \"EEEE, MMMM d, yyyy\");\n        }\n    }\n\n    function goToSlide(i, array, container){\n        index = i;\n        if(index >= array.length - 4){\n            index = 0;\n        }\n        if(index < 0){\n            index = array.length - 5;\n        }\n        container.style.transform = `translateX(-${index * 20}%)`;\n    }\n})();","export async function getData(country){\n    try{\n        const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${country}/?key=9NUZQN33KH5EP5BCW2TAZJHXA&iconSet=icons2`);\n\n        if(!response.ok){\n            throw new Error('Could not fetch');\n        }\n        \n        return await response.json(); \n    }catch(e){\n        alert(e);\n    }\n}"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","t","keys","Object","url","String","__esModule","default","test","slice","hash","needQuotes","replace","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","getPrototypeOf","value","mode","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","definition","defineProperty","enumerable","get","f","chunkId","all","reduce","promises","u","g","globalThis","Function","prop","prototype","hasOwnProperty","call","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","timeout","doneFns","fn","setTimeout","bind","type","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","p","b","baseURI","self","href","installedChunks","j","installedChunkData","promise","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","locals","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","pattern","object","findKey","valueCallback","rest","parsePattern","parseInt","parseResult","any","enUS","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","constructFromSymbol","for","constructFrom","Date","constructor","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","find","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","h","H","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","input","matched","tzIntlTimeZoneName","assign","dtf","timeZone","Intl","DateTimeFormat","timeZoneName","getDTF","formatted","formatToParts","partsTimeZone","format","tzNameMatch","exec","substr","hackyTimeZone","typeToPos","hour","minute","second","dtfCache","testDateFormatted","hourCycle","hourCycleSupported","fullYear","millisecond","setUTCHours","MILLISECONDS_IN_HOUR","patterns","timezone","timezoneZ","timezoneHH","timezoneHHMM","timezoneString","isUtcDate","absoluteOffset","validateTimezone","NaN","timeZoneString","validIANATimezoneCache","isValidTimezoneIANAString","now","toUtcDate","calcOffset","fixedOffset","utcGuess","o2","o3","max","fixOffset","tokens","hour12","getDateTimeFormat","filled","pos","RangeError","partsOffset","parsed","hackyOffset","tzTokenizeDate","asUTC","asTS","over","getTimeZoneOffset","floor","originalDate","timeZoneOffset","output","dateTimePattern","plainTime","YY","YYY","YYYY","YYYYY","MM","DDD","MMDD","Www","WwwD","HH","HHMM","HHMMSS","arguments","TypeError","additionalDigits","dateStrings","dateString","timeString","parts","trim","splitDateString","restDateString","patternYYY","patternYYYYY","yearString","centuryString","parseYear","validateDate","isLeapYear","isLeapYearIndex","validateDayOfYearDate","validateWeekDate","dayOfISOWeekYear","parseDate","timestamp","parseFloat","validateTime","seconds","parseTime","isoWeekYear","getUTCDay","setUTCDate","getUTCDate","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","tzFormattingTokensRegExp","formatInTimeZone","formatStr","matches","precededByQuotedSection","replaced","substring","firstCharacter","longFormatter","isToken","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","_message","subject","console","warn","includes","warnOrThrowProtectedError","formatter","offsetMilliseconds","resultDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toZonedTime","Country","currentdate","condition","tempF","icon","feeltempF","wind","precipitation","precipitationprob","days","scale","temp","toFixed","feeltemp","daytemp","async","displayCountry","container","loadImages","formatDates","weatherHeaders","className","cardsDiv","carrousel","leftBtn","frame","rightBtn","daysDiv","daysArray","headers","div","classList","textContent","tempDiv","tempImg","imgSrc","tempText","dateZoned","dayDate","dayIcon","daySrc","dayTemp","dayCondition","conditions","card","header","changeScale","searchBtn","getElementById","mainDiv","weatherDiv","flag","currentCountry","alert","country","datetimeEpoch","goToSlide","transform","addEventListener","response","fetch","ok","json","getData","address","nameFormatted","charAt","currentConditions","precip","feelslike","windspeed","precipprob","log","catch","addCountry"],"sourceRoot":""}